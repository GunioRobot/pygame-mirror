I don't think a transformation matrix is quite what you are looking
for for these kinds of controls.  That is all done in software, post
processing the image.  What I mean is controls that directly tell the
hardware what it should be doing.  I'm not sure QT supports it though.

I think the line you want to edit to fix the color stuff is

surf = SDL_CreateRGBSurface (0, self->boundsRect.right,
self->boundsRect.bottom, 32, 0xFF<<16, //bij linux is het 24
                                    0xFF<<8, 0xFF, 0);

That is a 32 bit surface currently set up to be _RGB, and is the alpha
channel.  The raw data you are pulling in might be something like
BGRA, which could explain the red and green being swapped.  Does
everything have a blue tint to it too?  You might try experimenting
with stuff like:

surf = SDL_CreateRGBSurface (0, self->boundsRect.right,
self->boundsRect.bottom, 32, 0xFF<<24, 0xFF<<16, 0xFF<<8, 0xFF);

Keep in mind though, as I have stated before, you really want to allow
for the flexibility of different surface depths, not just 32 bit.
This is more important than stuff like the transformation matrix.






































>>>>>>> 382d1c154538e12342fd1db9063fd543ed04e93c:tmp.txt
