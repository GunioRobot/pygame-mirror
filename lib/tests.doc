pygame.tests
Pygame unit test suite package

A quick way to run the test suite package from the command line
is by importing the go submodule:

python -c "import pygame.tests.go" [&lt;test options&gt;]

Command line option --help displays a usage message. Available options
correspond to the pygame.tests.run arguments.

The xxxx_test submodules of the tests package are unit test suites for
individual parts of Pygame. Each can also be run as a main program. This is
useful if the test, such as cdrom_test, is interactive.

For Pygame development the test suite can be run from a Pygame 
distribution root directory. Program run_tests.py is provided for convenience,
though test/go.py can be run directly.
<SECTION>



run
Run the Pygame unit test suite
pygame.tests.run(*args, **kwds): return tuple

Positional arguments (optional):
    The names of tests to include. If omitted then all tests are run. Test names
    need not include the trailing '_test'.

Keyword arguments:
    incomplete - fail incomplete tests (default False)
    subprocess - run test suites in subprocesses (default False, same process)
    dump - dump failures/errors as dict ready to eval (default False)
    file - if provided, the name of a file into which to dump failures/errors
    timings - if provided, the number of times to run each individual test to
              get an average run time (default is run each test once)
    exclude - A list of TAG names to exclude from the run
    show_output - show silenced stderr/stdout on errors (default False)
    all - dump all results, not just errors (default False)
    randomize - randomize order of tests (default False)
    seed - if provided, a seed randomizer integer
    multi_thread - if provided, the number of THREADS in which to run
                   subprocessed tests
    time_out - if subprocess is True then the time limit in seconds before
               killing a test (default 30)
    fake - if provided, the name of the fake tests package in the
           run_tests__tests subpackage to run instead of the normal
           Pygame tests
    python - the path to a python executable to run subprocessed tests
             (default sys.executable)

Return value:
    A tuple of total number of tests run, dictionary of error information.
    The dictionary is empty if no errors were recorded.

Tests can be run in the current process or a subprocess, depending on
the 'subprocess' argument. If tests are run in separate processes then
frozen tests will be killed. Also, using subprocesses more realistically
reproduces normal Pygame usage, where pygame.init() and pygame.quit() are
called only once per program execution.

Tests are run in a randomized order if the randomize argument is True
or a seed argument is provided. If no seed integer is provided then
the system time is used.

Individual test modules may have a __tags__ attribute, a list of tag strings
used to selectively omit modules from a run. By default only 'interactive'
modules such as cdrom_test are ignored. An interactive module must be run
from the console as a Python program.

This function can only be called once per Python session. It is not
reentrant.
<END>
